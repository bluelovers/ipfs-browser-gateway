{"version":3,"sources":["Gateway.js","Home.js","App.js","index.js"],"names":["Container","styled","Flex","withConfig","displayName","componentId","Object","jsx","withRouter","props","_useState","useState","support","message","_useState2","slicedToArray","hasSWSupport","setSWSupportState","_props$match$params$h","match","params","hash","window","location","href","split","concat","packageJSON","homepage","_ref3","useEffect","navigator","serviceWorker","ready","then","reload","center","column","_ref","react_default","a","createElement","Fragment","_ref2","article","Title","h1","Intro","p","Examples","Example","Home_Container","Gateway","startsWith","Home_ref","Home_ref2","HomePage","Component","browserHistory","createHistory","backgroundGradientKeyframe","keyframes","GlobalStyle","createGlobalStyle","_templateObject","react_router","history","exact","path","component","Home","App_ref","App_ref2","App","ReactDOM","render","App_App","document","getElementById","runtime","register"],"mappings":"uqEAQMA,EAAYC,YAAOC,KAAVC,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAGJ,CAAH,wBAgCyBK,OAAAC,EAAA,EAAAD,CAAA,iDAI9BA,OAAAC,EAAA,EAAAD,CAAA,OAAO,IAAP,yEASKE,kBAzCR,SAA0BC,GAAgD,IAAAC,EACrCC,mBAAS,CAAEC,QAAS,KAAMC,QAAS,KADEC,EAAAR,OAAAS,EAAA,EAAAT,CAAAI,EAAA,GACxEM,EADwEF,EAAA,GAC1DG,EAD0DH,EAAA,GAAAI,EAM3ET,EAHFU,MACEC,OAAUC,YAJiE,IAAAH,EAI1DI,OAAOC,SAASC,KAAKC,MAArB,GAAAC,OAA8BC,EAAYC,SAA1C,UAA2D,GAJDV,EAUxC,SAAAW,IACjCZ,EAAkB,CAChBL,SAAS,EACTC,QAAS,0EAajB,OAlBAiB,oBAAU,WACJ,kBAAmBC,UACrBA,UAAUC,cAAcC,MAAMC,KAA9BL,GAOAZ,EAAkB,CAAEL,SAAS,EAAOC,QAAS,wDAE9C,IAEHiB,oBAAU,YACqB,IAAzBd,EAAaJ,SACfU,OAAOC,SAASY,UAEjB,CAACnB,EAAaJ,UAEfN,OAAAC,EAAA,EAAAD,CAACN,EAAD,CAAWoC,QAAM,EAACC,QAAM,QAAxB,EAC4B,OAAzBrB,EAAaJ,SAAb0B,GACyB,IAAzBtB,EAAaJ,SACZ2B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEpC,OAAAC,EAAA,EAAAD,CAAA,OAAO,IAAKU,EAAaH,SAD3B8B,EAGErC,OAAAC,EAAA,EAAAD,CAAA,OAAO,IAAP,SAAAoB,OAAqBL,MAGC,IAAzBL,EAAaJ,SAAqBI,EAAaH,WCxChDb,EAAYC,IAAO2C,QAAVzC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,YAAGJ,CAAH,MAET4C,EAAQ5C,IAAO6C,GAAV3C,WAAA,CAAAC,YAAA,cAAAC,YAAA,YAAGJ,CAAH,mDAKL8C,EAAQ9C,IAAO+C,EAAV7C,WAAA,CAAAC,YAAA,cAAAC,YAAA,YAAGJ,CAAH,0EAQLgD,EAAWhD,YAAOC,KAAVC,WAAA,CAAAC,YAAA,iBAAAC,YAAA,YAAGJ,CAAH,iDAIRiD,EAAUjD,IAAOuC,EAAVrC,WAAA,CAAAC,YAAA,gBAAAC,YAAA,YAAGJ,CAAH,+FAcLK,OAAAC,EAAA,EAAAD,CAAC6C,EAAD,UACE7C,OAAAC,EAAA,EAAAD,CAACuC,EAAD,6CACAvC,OAAAC,EAAA,EAAAD,CAAC8C,EAAD,OAKJ9C,OAAAC,EAAA,EAAAD,CAAC6C,EAAD,UACE7C,OAAAC,EAAA,EAAAD,CAACuC,EAAD,6CACAvC,OAAAC,EAAA,EAAAD,CAAC2C,EAAD,CAAUZ,QAAM,QAAhB,EACE/B,OAAAC,EAAA,EAAAD,CAACyC,EAAD,qBACUzC,OAAAC,EAAA,EAAAD,CAAA,yCADV,eAGAA,OAAAC,EAAA,EAAAD,CAAC4C,EAAD,CAAS1B,KAAK,4DAAd,4EAGAlB,OAAAC,EAAA,EAAAD,CAAC4C,EAAD,CAAS1B,KAAK,4DAAd,sEAGAlB,OAAAC,EAAA,EAAAD,CAAC4C,EAAD,CAAS1B,KAAK,4DAAd,yGArBN,OAAIF,OAAOC,SAASC,KAAK6B,WAArB,GAAA3B,OAAmCC,EAAYC,SAA/C,UACK0B,EAOFC,MAXLC,gLAAiBC,aAiCRjD,cAAWgD,4NC7D1B,IAAME,EAAiBC,cAEjBC,EAA6BC,YAAH,qGAK1BC,EAAcC,YAAHC,IAIFJ,KAQPtD,OAAAC,EAAA,EAAAD,CAACwD,EAAD,MACAxD,OAAAC,EAAA,EAAAD,CAAC2D,EAAA,EAAD,CAAaC,QAASR,QAAtB,EACEpD,OAAAC,EAAA,EAAAD,CAAC2D,EAAA,EAAD,UACE3D,OAAAC,EAAA,EAAAD,CAAC2D,EAAA,EAAD,CAAOE,OAAK,EAACC,KAAK,cAAcC,UAAWjB,IAC3C9C,OAAAC,EAAA,EAAAD,CAAC2D,EAAA,EAAD,CAAOG,KAAK,IAAIC,UAAWC,mBANnC,OACE/B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KAAA6B,EAAAC,OAHeC,gLAAYhB,aCjBjCiB,IAASC,OAAOrE,OAAAC,EAAA,EAAAD,CAACsE,EAAD,IAASC,SAASC,eAAe,SAE7C,kBAAmB/C,WACrBgD,IAAQC","file":"static/js/main.02c44346.chunk.js","sourcesContent":["// @flow\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\nimport Flex from 'styled-flex-component';\n\nimport packageJSON from '../package.json';\n\nconst Container = styled(Flex)`\n  overflow: scroll;\n`;\n\nexport function GatewayComponent(props: { match: { params: { hash: string } } }) {\n  const [hasSWSupport, setSWSupportState] = useState({ support: null, message: '' });\n  const {\n    match: {\n      params: { hash = window.location.href.split(`${packageJSON.homepage}ipfs/`)[1] },\n    },\n  } = props;\n\n  useEffect(() => {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(() => {\n        setSWSupportState({\n          support: true,\n          message: 'Your browser supprots service worker, and a service worker is active.',\n        });\n      });\n    } else {\n      setSWSupportState({ support: false, message: 'Service workers are not supported in your browser.' });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (hasSWSupport.support === true) {\n      window.location.reload();\n    }\n  }, [hasSWSupport.support]);\n  return (\n    <Container center column>\n      {hasSWSupport.support === null && <p>Checking IPFS Gateway support</p>}\n      {hasSWSupport.support === true && (\n        <>\n          <p key=\"0\">{hasSWSupport.message}</p>\n          <p key=\"1\">Usually it will take effect after refreshing. Refreshing for you now:</p>\n          <p key=\"2\">{`/ipfs/${hash}`}</p>\n        </>\n      )}\n      {hasSWSupport.support === false && hasSWSupport.message}\n    </Container>\n  );\n}\n\nexport default withRouter(GatewayComponent);\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Flex from 'styled-flex-component';\nimport { withRouter } from 'react-router-dom';\n\nimport packageJSON from '../package.json';\nimport Gateway from './Gateway';\n\nconst Container = styled.article``;\n\nconst Title = styled.h1`\n  text-align: center;\n  color: white;\n  font-size: 48px;\n`;\nconst Intro = styled.p`\n  text-align: center;\n  color: #333;\n  opacity: 0.5;\n  font-size: 24px;\n  width: 510px;\n`;\n\nconst Examples = styled(Flex)`\n  margin-left: calc(50vw - 260px);\n  width: 510px;\n`;\nconst Example = styled.a`\n  text-align: start;\n  box-decoration-break: clone;\n  font-weight: 700;\n  color: #333;\n\n  margin-top: 20px;\n`;\n\nclass HomePage extends Component<{ match: { params: { hash: string } } }> {\n  render() {\n    // if we are deployed and in 404.html, though the url is something like https://onetwo.ren/ipfs-browser-gateway/ipfs/QmXD8TDFDn7kfsmCD2eQ3QWuhLpvj7LB5tbzU44iypdmQ9 , but we are still in Home component due to gh-page's single html serving\n    if (window.location.href.startsWith(`${packageJSON.homepage}ipfs/`)) {\n      return (\n        <Container>\n          <Title>IPFS Browser Gateway Playground</Title>\n          <Gateway />\n        </Container>\n      );\n    }\n    return (\n      <Container>\n        <Title>IPFS Browser Gateway Playground</Title>\n        <Examples column>\n          <Intro>\n            try add <code>/ipfs/somehashblabla</code> to the URL\n          </Intro>\n          <Example href=\"ipfs/QmYwAPJzv5CZsnA625s3Xf2nemtYgPpHdWEz79ojWnPbdG\">\n            directory listing: ipfs/QmYwAPJzv5CZsnA625s3Xf2nemtYgPpHdWEz79ojWnPbdG\n          </Example>\n          <Example href=\"ipfs/QmXD8TDFDn7kfsmCD2eQ3QWuhLpvj7LB5tbzU44iypdmQ9\">\n            simple file: ipfs/QmXD8TDFDn7kfsmCD2eQ3QWuhLpvj7LB5tbzU44iypdmQ9\n          </Example>\n          <Example href=\"ipfs/QmeYxwj4CwCeGVhwi3xLrmBZUUFQdftshSiGLrTdTnWEVV\">\n            directory containing a web page: ipfs/QmeYxwj4CwCeGVhwi3xLrmBZUUFQdftshSiGLrTdTnWEVV\n          </Example>\n        </Examples>\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(HomePage);\n","import React, { Component } from 'react';\nimport { Router as ReactRouter, Route, Switch } from 'react-router-dom';\nimport { createBrowserHistory as createHistory } from 'history';\nimport { createGlobalStyle, keyframes } from 'styled-components';\n\nimport Gateway from './Gateway';\nimport Home from './Home';\n\nconst browserHistory = createHistory();\n\nconst backgroundGradientKeyframe = keyframes`\n  0%{background-position:0% 50%}\n  50%{background-position:100% 50%}\n  100%{background-position:0% 50%}\n`;\nconst GlobalStyle = createGlobalStyle`\nbody {\n  background: linear-gradient(270deg, #32e9e7, #96d7ff, #f396ff);\n  background-size: 600% 600%;\n  animation: ${backgroundGradientKeyframe} 30s ease infinite;\n}\n`;\n\nexport default class App extends Component {\n  render() {\n    return (\n      <>\n        <GlobalStyle />\n        <ReactRouter history={browserHistory}>\n          <Switch>\n            <Route exact path=\"/ipfs/:hash\" component={Gateway} />\n            <Route path=\"/\" component={Home} />\n          </Switch>\n        </ReactRouter>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport runtime from 'serviceworker-webpack-plugin/lib/runtime';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nif ('serviceWorker' in navigator) {\n  runtime.register();\n}\n"],"sourceRoot":""}